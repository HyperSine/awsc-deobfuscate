import * as ref from 'ref-napi';
import * as ffi from 'ffi-napi';

const Void = ref.types.void;
const Bool = ref.types.bool;
const Int = ref.types.int;
const UInt = ref.types.uint;
const Int64 = ref.types.int64;
const UInt64 = ref.types.uint64;
const Float32 = ref.types.float;
const Float64 = ref.types.double;

const _Z3_symbol = ref.types.void;
const _Z3_literals = ref.types.void;
const _Z3_config = ref.types.void;
const _Z3_context = ref.types.void;
const _Z3_sort = ref.types.void;
const _Z3_func_decl = ref.types.void;
const _Z3_ast = ref.types.void;
const _Z3_app = ref.types.void;
const _Z3_pattern = ref.types.void;
const _Z3_model = ref.types.void;
const _Z3_constructor = ref.types.void;
const _Z3_constructor_list = ref.types.void;
const _Z3_params = ref.types.void;
const _Z3_param_descrs = ref.types.void;
const _Z3_parser_context = ref.types.void;
const _Z3_goal = ref.types.void;
const _Z3_tactic = ref.types.void;
const _Z3_simplifier = ref.types.void;
const _Z3_probe = ref.types.void;
const _Z3_stats = ref.types.void;
const _Z3_solver = ref.types.void;
const _Z3_solver_callback = ref.types.void;
const _Z3_ast_vector = ref.types.void;
const _Z3_ast_map = ref.types.void;
const _Z3_apply_result = ref.types.void;
const _Z3_func_interp = ref.types.void;
const _Z3_func_entry = ref.types.void;
const _Z3_fixedpoint = ref.types.void;
const _Z3_optimize = ref.types.void;
const _Z3_rcf_num = ref.types.void;

const Z3_symbol = ref.refType(_Z3_symbol);
const Z3_literals = ref.refType(_Z3_literals);
const Z3_config = ref.refType(_Z3_config);
const Z3_context = ref.refType(_Z3_context);
const Z3_sort = ref.refType(_Z3_sort);
const Z3_func_decl = ref.refType(_Z3_func_decl);
const Z3_ast = ref.refType(_Z3_ast);
const Z3_app = ref.refType(_Z3_app);
const Z3_pattern = ref.refType(_Z3_pattern);
const Z3_model = ref.refType(_Z3_model);
const Z3_constructor = ref.refType(_Z3_constructor);
const Z3_constructor_list = ref.refType(_Z3_constructor_list);
const Z3_params = ref.refType(_Z3_params);
const Z3_param_descrs = ref.refType(_Z3_param_descrs);
const Z3_parser_context = ref.refType(_Z3_parser_context);
const Z3_goal = ref.refType(_Z3_goal);
const Z3_tactic = ref.refType(_Z3_tactic);
const Z3_simplifier = ref.refType(_Z3_simplifier);
const Z3_probe = ref.refType(_Z3_probe);
const Z3_stats = ref.refType(_Z3_stats);
const Z3_solver = ref.refType(_Z3_solver);
const Z3_solver_callback = ref.refType(_Z3_solver_callback);
const Z3_ast_vector = ref.refType(_Z3_ast_vector);
const Z3_ast_map = ref.refType(_Z3_ast_map);
const Z3_apply_result = ref.refType(_Z3_apply_result);
const Z3_func_interp = ref.refType(_Z3_func_interp);
const Z3_func_entry = ref.refType(_Z3_func_entry);
const Z3_fixedpoint = ref.refType(_Z3_fixedpoint);
const Z3_optimize = ref.refType(_Z3_optimize);
const Z3_rcf_num = ref.refType(_Z3_rcf_num);

const Z3_string = ref.types.CString;
const Z3_char_ptr = ref.refType(ref.types.char);
const Z3_string_ptr = ref.refType(Z3_string);

const Z3_lbool = ref.types.int;
const Z3_symbol_kind = ref.types.int;
const Z3_parameter_kind = ref.types.int;
const Z3_sort_kind = ref.types.int;
const Z3_ast_kind = ref.types.int;
const Z3_decl_kind = ref.types.int;
const Z3_param_kind = ref.types.int;
const Z3_ast_print_mode = ref.types.int;
const Z3_error_code = ref.types.int;

const Z3_error_handler = 'pointer';
const Z3_push_eh = 'pointer';
const Z3_pop_eh = 'pointer';
const Z3_fresh_eh = 'pointer';
const Z3_fixed_eh = 'pointer';
const Z3_eq_eh = 'pointer';
const Z3_final_eh = 'pointer';
const Z3_created_eh = 'pointer';
const Z3_decide_eh = 'pointer';
const Z3_on_clause_eh = 'pointer';

const Z3_goal_prec = ref.types.int;

const Z3_fixedpoint_reduce_assign_callback_fptr = 'pointer';
const Z3_fixedpoint_reduce_app_callback_fptr = 'pointer';
const Z3_fixedpoint_new_lemma_eh = 'pointer';
const Z3_fixedpoint_predecessor_eh = 'pointer';
const Z3_fixedpoint_unfold_eh = 'pointer';

const Z3_model_eh = 'pointer';

export const libz3 = ffi.Library(
    'libz3',
    {
        'Z3_global_param_set': [Void, [Z3_string, Z3_string]],
        'Z3_global_param_reset_all': [Void, []],
        'Z3_global_param_get': [Bool, [Z3_string, Z3_string_ptr]],
        'Z3_mk_config': [Z3_config, []],
        'Z3_del_config': [Void, [Z3_config]],
        'Z3_set_param_value': [Void, [Z3_config, Z3_string, Z3_string]],
        'Z3_mk_context': [Z3_context, [Z3_config]],
        'Z3_mk_context_rc': [Z3_context, [Z3_config]],
        'Z3_del_context': [Void, [Z3_context]],
        'Z3_inc_ref': [Void, [Z3_context, Z3_ast]],
        'Z3_dec_ref': [Void, [Z3_context, Z3_ast]],
        'Z3_update_param_value': [Void, [Z3_context, Z3_string, Z3_string]],
        'Z3_get_global_param_descrs': [Z3_param_descrs, [Z3_context]],
        'Z3_interrupt': [Void, [Z3_context]],
        'Z3_enable_concurrent_dec_ref': [Void, [Z3_context]],
        'Z3_mk_params': [Z3_params, [Z3_context]],
        'Z3_params_inc_ref': [Void, [Z3_context, Z3_params]],
        'Z3_params_dec_ref': [Void, [Z3_context, Z3_params]],
        'Z3_params_set_bool': [Void, [Z3_context, Z3_params, Z3_symbol, Bool]],
        'Z3_params_set_uint': [Void, [Z3_context, Z3_params, Z3_symbol, UInt]],
        'Z3_params_set_double': [Void, [Z3_context, Z3_params, Z3_symbol, Float64]],
        'Z3_params_set_symbol': [Void, [Z3_context, Z3_params, Z3_symbol, Z3_symbol]],
        'Z3_params_to_string': [Z3_string, [Z3_context, Z3_params]],
        'Z3_params_validate': [Void, [Z3_context, Z3_params, Z3_param_descrs]],
        'Z3_param_descrs_inc_ref': [Void, [Z3_context, Z3_param_descrs]],
        'Z3_param_descrs_dec_ref': [Void, [Z3_context, Z3_param_descrs]],
        'Z3_param_descrs_get_kind': [Z3_param_kind, [Z3_context, Z3_param_descrs, Z3_symbol]],
        'Z3_param_descrs_size': [UInt, [Z3_context, Z3_param_descrs]],
        'Z3_param_descrs_get_name': [Z3_symbol, [Z3_context, Z3_param_descrs, UInt]],
        'Z3_param_descrs_get_documentation': [Z3_string, [Z3_context, Z3_param_descrs, Z3_symbol]],
        'Z3_param_descrs_to_string': [Z3_string, [Z3_context, Z3_param_descrs]],
        'Z3_mk_int_symbol': [Z3_symbol, [Z3_context, Int]],
        'Z3_mk_string_symbol': [Z3_symbol, [Z3_context, Z3_string]],
        'Z3_mk_uninterpreted_sort': [Z3_sort, [Z3_context, Z3_symbol]],
        'Z3_mk_bool_sort': [Z3_sort, [Z3_context]],
        'Z3_mk_int_sort': [Z3_sort, [Z3_context]],
        'Z3_mk_real_sort': [Z3_sort, [Z3_context]],
        'Z3_mk_bv_sort': [Z3_sort, [Z3_context, UInt]],
        'Z3_mk_finite_domain_sort': [Z3_sort, [Z3_context, Z3_symbol, UInt64]],
        'Z3_mk_array_sort': [Z3_sort, [Z3_context, Z3_sort, Z3_sort]],
        'Z3_mk_array_sort_n': [Z3_sort, [Z3_context, UInt, ref.refType(Z3_sort), Z3_sort]],
        'Z3_mk_tuple_sort': [Z3_sort, [Z3_context, Z3_symbol, UInt, ref.refType(Z3_symbol), ref.refType(Z3_sort), ref.refType(Z3_func_decl), ref.refType(Z3_func_decl)]],
        'Z3_mk_enumeration_sort': [Z3_sort, [Z3_context, Z3_symbol, UInt, ref.refType(Z3_symbol), ref.refType(Z3_func_decl), ref.refType(Z3_func_decl)]],
        'Z3_mk_list_sort': [Z3_sort, [Z3_context, Z3_symbol, Z3_sort, ref.refType(Z3_func_decl), ref.refType(Z3_func_decl), ref.refType(Z3_func_decl), ref.refType(Z3_func_decl), ref.refType(Z3_func_decl), ref.refType(Z3_func_decl)]],
        'Z3_mk_constructor': [Z3_constructor, [Z3_context, Z3_symbol, Z3_symbol, UInt, ref.refType(Z3_symbol), ref.refType(Z3_sort), ref.refType(UInt)]],
        'Z3_del_constructor': [Void, [Z3_context, Z3_constructor]],
        'Z3_mk_datatype': [Z3_sort, [Z3_context, Z3_symbol, UInt, ref.refType(Z3_constructor)]],
        'Z3_mk_datatype_sort': [Z3_sort, [Z3_context, Z3_symbol]],
        'Z3_mk_constructor_list': [Z3_constructor_list, [Z3_context, UInt, ref.refType(Z3_constructor)]],
        'Z3_del_constructor_list': [Void, [Z3_context, Z3_constructor_list]],
        'Z3_mk_datatypes': [Void, [Z3_context, UInt, ref.refType(Z3_symbol), ref.refType(Z3_sort), ref.refType(Z3_constructor_list)]],
        'Z3_query_constructor': [Void, [Z3_context, Z3_constructor, UInt, ref.refType(Z3_func_decl), ref.refType(Z3_func_decl), ref.refType(Z3_func_decl)]],
        'Z3_mk_func_decl': [Z3_func_decl, [Z3_context, Z3_symbol, UInt, ref.refType(Z3_sort), Z3_sort]],
        'Z3_mk_app': [Z3_ast, [Z3_context, Z3_func_decl, UInt, ref.refType(Z3_ast)]],
        'Z3_mk_const': [Z3_ast, [Z3_context, Z3_symbol, Z3_sort]],
        'Z3_mk_fresh_func_decl': [Z3_func_decl, [Z3_context, Z3_string, UInt, ref.refType(Z3_sort), Z3_sort]],
        'Z3_mk_fresh_const': [Z3_ast, [Z3_context, Z3_string, Z3_sort]],
        'Z3_mk_rec_func_decl': [Z3_func_decl, [Z3_context, Z3_symbol, UInt, ref.refType(Z3_sort), Z3_sort]],
        'Z3_add_rec_def': [Void, [Z3_context, Z3_func_decl, UInt, ref.refType(Z3_ast), Z3_ast]],
        'Z3_mk_true': [Z3_ast, [Z3_context]],
        'Z3_mk_false': [Z3_ast, [Z3_context]],
        'Z3_mk_eq': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_distinct': [Z3_ast, [Z3_context, UInt, ref.refType(Z3_ast)]],
        'Z3_mk_not': [Z3_ast, [Z3_context, Z3_ast]],
        'Z3_mk_ite': [Z3_ast, [Z3_context, Z3_ast, Z3_ast, Z3_ast]],
        'Z3_mk_iff': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_implies': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_xor': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_and': [Z3_ast, [Z3_context, UInt, ref.refType(Z3_ast)]],
        'Z3_mk_or': [Z3_ast, [Z3_context, UInt, ref.refType(Z3_ast)]],
        'Z3_mk_add': [Z3_ast, [Z3_context, UInt, ref.refType(Z3_ast)]],
        'Z3_mk_mul': [Z3_ast, [Z3_context, UInt, ref.refType(Z3_ast)]],
        'Z3_mk_sub': [Z3_ast, [Z3_context, UInt, ref.refType(Z3_ast)]],
        'Z3_mk_unary_minus': [Z3_ast, [Z3_context, Z3_ast]],
        'Z3_mk_div': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_mod': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_rem': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_power': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_lt': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_le': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_gt': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_ge': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_divides': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_int2real': [Z3_ast, [Z3_context, Z3_ast]],
        'Z3_mk_real2int': [Z3_ast, [Z3_context, Z3_ast]],
        'Z3_mk_is_int': [Z3_ast, [Z3_context, Z3_ast]],
        'Z3_mk_bvnot': [Z3_ast, [Z3_context, Z3_ast]],
        'Z3_mk_bvredand': [Z3_ast, [Z3_context, Z3_ast]],
        'Z3_mk_bvredor': [Z3_ast, [Z3_context, Z3_ast]],
        'Z3_mk_bvand': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_bvor': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_bvxor': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_bvnand': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_bvnor': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_bvxnor': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_bvneg': [Z3_ast, [Z3_context, Z3_ast]],
        'Z3_mk_bvadd': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_bvsub': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_bvmul': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_bvudiv': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_bvsdiv': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_bvurem': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_bvsrem': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_bvsmod': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_bvult': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_bvslt': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_bvule': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_bvsle': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_bvuge': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_bvsge': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_bvugt': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_bvsgt': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_concat': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_extract': [Z3_ast, [Z3_context, UInt, UInt, Z3_ast]],
        'Z3_mk_sign_ext': [Z3_ast, [Z3_context, UInt, Z3_ast]],
        'Z3_mk_zero_ext': [Z3_ast, [Z3_context, UInt, Z3_ast]],
        'Z3_mk_repeat': [Z3_ast, [Z3_context, UInt, Z3_ast]],
        'Z3_mk_bit2bool': [Z3_ast, [Z3_context, UInt, Z3_ast]],
        'Z3_mk_bvshl': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_bvlshr': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_bvashr': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_rotate_left': [Z3_ast, [Z3_context, UInt, Z3_ast]],
        'Z3_mk_rotate_right': [Z3_ast, [Z3_context, UInt, Z3_ast]],
        'Z3_mk_ext_rotate_left': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_ext_rotate_right': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_int2bv': [Z3_ast, [Z3_context, UInt, Z3_ast]],
        'Z3_mk_bv2int': [Z3_ast, [Z3_context, Z3_ast, Bool]],
        'Z3_mk_bvadd_no_overflow': [Z3_ast, [Z3_context, Z3_ast, Z3_ast, Bool]],
        'Z3_mk_bvadd_no_underflow': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_bvsub_no_overflow': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_bvsub_no_underflow': [Z3_ast, [Z3_context, Z3_ast, Z3_ast, Bool]],
        'Z3_mk_bvsdiv_no_overflow': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_bvneg_no_overflow': [Z3_ast, [Z3_context, Z3_ast]],
        'Z3_mk_bvmul_no_overflow': [Z3_ast, [Z3_context, Z3_ast, Z3_ast, Bool]],
        'Z3_mk_bvmul_no_underflow': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_select': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_select_n': [Z3_ast, [Z3_context, Z3_ast, UInt, ref.refType(Z3_ast)]],
        'Z3_mk_store': [Z3_ast, [Z3_context, Z3_ast, Z3_ast, Z3_ast]],
        'Z3_mk_store_n': [Z3_ast, [Z3_context, Z3_ast, UInt, ref.refType(Z3_ast), Z3_ast]],
        'Z3_mk_const_array': [Z3_ast, [Z3_context, Z3_sort, Z3_ast]],
        'Z3_mk_map': [Z3_ast, [Z3_context, Z3_func_decl, UInt, ref.refType(Z3_ast)]],
        'Z3_mk_array_default': [Z3_ast, [Z3_context, Z3_ast]],
        'Z3_mk_as_array': [Z3_ast, [Z3_context, Z3_func_decl]],
        'Z3_mk_set_has_size': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_set_sort': [Z3_sort, [Z3_context, Z3_sort]],
        'Z3_mk_empty_set': [Z3_ast, [Z3_context, Z3_sort]],
        'Z3_mk_full_set': [Z3_ast, [Z3_context, Z3_sort]],
        'Z3_mk_set_add': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_set_del': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_set_union': [Z3_ast, [Z3_context, UInt, ref.refType(Z3_ast)]],
        'Z3_mk_set_intersect': [Z3_ast, [Z3_context, UInt, ref.refType(Z3_ast)]],
        'Z3_mk_set_difference': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_set_complement': [Z3_ast, [Z3_context, Z3_ast]],
        'Z3_mk_set_member': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_set_subset': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_array_ext': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_numeral': [Z3_ast, [Z3_context, Z3_string, Z3_sort]],
        'Z3_mk_real': [Z3_ast, [Z3_context, Int, Int]],
        'Z3_mk_real_int64': [Z3_ast, [Z3_context, Int64, Int64]],
        'Z3_mk_int': [Z3_ast, [Z3_context, Int, Z3_sort]],
        'Z3_mk_unsigned_int': [Z3_ast, [Z3_context, UInt, Z3_sort]],
        'Z3_mk_int64': [Z3_ast, [Z3_context, Int64, Z3_sort]],
        'Z3_mk_unsigned_int64': [Z3_ast, [Z3_context, UInt64, Z3_sort]],
        'Z3_mk_bv_numeral': [Z3_ast, [Z3_context, UInt, ref.refType(Bool)]],
        'Z3_mk_seq_sort': [Z3_sort, [Z3_context, Z3_sort]],
        'Z3_is_seq_sort': [Bool, [Z3_context, Z3_sort]],
        'Z3_get_seq_sort_basis': [Z3_sort, [Z3_context, Z3_sort]],
        'Z3_mk_re_sort': [Z3_sort, [Z3_context, Z3_sort]],
        'Z3_is_re_sort': [Bool, [Z3_context, Z3_sort]],
        'Z3_get_re_sort_basis': [Z3_sort, [Z3_context, Z3_sort]],
        'Z3_mk_string_sort': [Z3_sort, [Z3_context]],
        'Z3_mk_char_sort': [Z3_sort, [Z3_context]],
        'Z3_is_string_sort': [Bool, [Z3_context, Z3_sort]],
        'Z3_is_char_sort': [Bool, [Z3_context, Z3_sort]],
        'Z3_mk_string': [Z3_ast, [Z3_context, Z3_string]],
        'Z3_mk_lstring': [Z3_ast, [Z3_context, UInt, Z3_string]],
        'Z3_mk_u32string': [Z3_ast, [Z3_context, UInt, ref.refType(UInt)]],
        'Z3_is_string': [Bool, [Z3_context, Z3_ast]],
        'Z3_get_string': [Z3_string, [Z3_context, Z3_ast]],
        'Z3_get_lstring': [Z3_char_ptr, [Z3_context, Z3_ast, ref.refType(UInt)]],
        'Z3_get_string_length': [UInt, [Z3_context, Z3_ast]],
        'Z3_get_string_contents': [Void, [Z3_context, Z3_ast, UInt, ref.refType(UInt)]],
        'Z3_mk_seq_empty': [Z3_ast, [Z3_context, Z3_sort]],
        'Z3_mk_seq_unit': [Z3_ast, [Z3_context, Z3_ast]],
        'Z3_mk_seq_concat': [Z3_ast, [Z3_context, UInt, ref.refType(Z3_ast)]],
        'Z3_mk_seq_prefix': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_seq_suffix': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_seq_contains': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_str_lt': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_str_le': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_seq_extract': [Z3_ast, [Z3_context, Z3_ast, Z3_ast, Z3_ast]],
        'Z3_mk_seq_replace': [Z3_ast, [Z3_context, Z3_ast, Z3_ast, Z3_ast]],
        'Z3_mk_seq_at': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_seq_nth': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_seq_length': [Z3_ast, [Z3_context, Z3_ast]],
        'Z3_mk_seq_index': [Z3_ast, [Z3_context, Z3_ast, Z3_ast, Z3_ast]],
        'Z3_mk_seq_last_index': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_str_to_int': [Z3_ast, [Z3_context, Z3_ast]],
        'Z3_mk_int_to_str': [Z3_ast, [Z3_context, Z3_ast]],
        'Z3_mk_string_to_code': [Z3_ast, [Z3_context, Z3_ast]],
        'Z3_mk_string_from_code': [Z3_ast, [Z3_context, Z3_ast]],
        'Z3_mk_ubv_to_str': [Z3_ast, [Z3_context, Z3_ast]],
        'Z3_mk_sbv_to_str': [Z3_ast, [Z3_context, Z3_ast]],
        'Z3_mk_seq_to_re': [Z3_ast, [Z3_context, Z3_ast]],
        'Z3_mk_seq_in_re': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_re_plus': [Z3_ast, [Z3_context, Z3_ast]],
        'Z3_mk_re_star': [Z3_ast, [Z3_context, Z3_ast]],
        'Z3_mk_re_option': [Z3_ast, [Z3_context, Z3_ast]],
        'Z3_mk_re_union': [Z3_ast, [Z3_context, UInt, ref.refType(Z3_ast)]],
        'Z3_mk_re_concat': [Z3_ast, [Z3_context, UInt, ref.refType(Z3_ast)]],
        'Z3_mk_re_range': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_re_allchar': [Z3_ast, [Z3_context, Z3_sort]],
        'Z3_mk_re_loop': [Z3_ast, [Z3_context, Z3_ast, UInt, UInt]],
        'Z3_mk_re_power': [Z3_ast, [Z3_context, Z3_ast, UInt]],
        'Z3_mk_re_intersect': [Z3_ast, [Z3_context, UInt, ref.refType(Z3_ast)]],
        'Z3_mk_re_complement': [Z3_ast, [Z3_context, Z3_ast]],
        'Z3_mk_re_diff': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_re_empty': [Z3_ast, [Z3_context, Z3_sort]],
        'Z3_mk_re_full': [Z3_ast, [Z3_context, Z3_sort]],
        'Z3_mk_char': [Z3_ast, [Z3_context, UInt]],
        'Z3_mk_char_le': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_char_to_int': [Z3_ast, [Z3_context, Z3_ast]],
        'Z3_mk_char_to_bv': [Z3_ast, [Z3_context, Z3_ast]],
        'Z3_mk_char_from_bv': [Z3_ast, [Z3_context, Z3_ast]],
        'Z3_mk_char_is_digit': [Z3_ast, [Z3_context, Z3_ast]],
        'Z3_mk_linear_order': [Z3_func_decl, [Z3_context, Z3_sort, UInt]],
        'Z3_mk_partial_order': [Z3_func_decl, [Z3_context, Z3_sort, UInt]],
        'Z3_mk_piecewise_linear_order': [Z3_func_decl, [Z3_context, Z3_sort, UInt]],
        'Z3_mk_tree_order': [Z3_func_decl, [Z3_context, Z3_sort, UInt]],
        'Z3_mk_transitive_closure': [Z3_func_decl, [Z3_context, Z3_func_decl]],
        'Z3_mk_pattern': [Z3_pattern, [Z3_context, UInt, ref.refType(Z3_ast)]],
        'Z3_mk_bound': [Z3_ast, [Z3_context, UInt, Z3_sort]],
        'Z3_mk_forall': [Z3_ast, [Z3_context, UInt, UInt, ref.refType(Z3_pattern), UInt, ref.refType(Z3_sort), ref.refType(Z3_symbol), Z3_ast]],
        'Z3_mk_exists': [Z3_ast, [Z3_context, UInt, UInt, ref.refType(Z3_pattern), UInt, ref.refType(Z3_sort), ref.refType(Z3_symbol), Z3_ast]],
        'Z3_mk_quantifier': [Z3_ast, [Z3_context, Bool, UInt, UInt, ref.refType(Z3_pattern), UInt, ref.refType(Z3_sort), ref.refType(Z3_symbol), Z3_ast]],
        'Z3_mk_quantifier_ex': [Z3_ast, [Z3_context, Bool, UInt, Z3_symbol, Z3_symbol, UInt, ref.refType(Z3_pattern), UInt, ref.refType(Z3_ast), UInt, ref.refType(Z3_sort), ref.refType(Z3_symbol), Z3_ast]],
        'Z3_mk_forall_const': [Z3_ast, [Z3_context, UInt, UInt, ref.refType(Z3_app), UInt, ref.refType(Z3_pattern), Z3_ast]],
        'Z3_mk_exists_const': [Z3_ast, [Z3_context, UInt, UInt, ref.refType(Z3_app), UInt, ref.refType(Z3_pattern), Z3_ast]],
        'Z3_mk_quantifier_const': [Z3_ast, [Z3_context, Bool, UInt, UInt, ref.refType(Z3_app), UInt, ref.refType(Z3_pattern), Z3_ast]],
        'Z3_mk_quantifier_const_ex': [Z3_ast, [Z3_context, Bool, UInt, Z3_symbol, Z3_symbol, UInt, ref.refType(Z3_app), UInt, ref.refType(Z3_pattern), UInt, ref.refType(Z3_ast), Z3_ast]],
        'Z3_mk_lambda': [Z3_ast, [Z3_context, UInt, ref.refType(Z3_sort), ref.refType(Z3_symbol), Z3_ast]],
        'Z3_mk_lambda_const': [Z3_ast, [Z3_context, UInt, ref.refType(Z3_app), Z3_ast]],
        'Z3_get_symbol_kind': [Z3_symbol_kind, [Z3_context, Z3_symbol]],
        'Z3_get_symbol_int': [Int, [Z3_context, Z3_symbol]],
        'Z3_get_symbol_string': [Z3_string, [Z3_context, Z3_symbol]],
        'Z3_get_sort_name': [Z3_symbol, [Z3_context, Z3_sort]],
        'Z3_get_sort_id': [UInt, [Z3_context, Z3_sort]],
        'Z3_sort_to_ast': [Z3_ast, [Z3_context, Z3_sort]],
        'Z3_is_eq_sort': [Bool, [Z3_context, Z3_sort, Z3_sort]],
        'Z3_get_sort_kind': [Z3_sort_kind, [Z3_context, Z3_sort]],
        'Z3_get_bv_sort_size': [UInt, [Z3_context, Z3_sort]],
        'Z3_get_finite_domain_sort_size': [Bool, [Z3_context, Z3_sort, ref.refType(UInt64)]],
        'Z3_get_array_sort_domain': [Z3_sort, [Z3_context, Z3_sort]],
        'Z3_get_array_sort_domain_n': [Z3_sort, [Z3_context, Z3_sort, UInt]],
        'Z3_get_array_sort_range': [Z3_sort, [Z3_context, Z3_sort]],
        'Z3_get_tuple_sort_mk_decl': [Z3_func_decl, [Z3_context, Z3_sort]],
        'Z3_get_tuple_sort_num_fields': [UInt, [Z3_context, Z3_sort]],
        'Z3_get_tuple_sort_field_decl': [Z3_func_decl, [Z3_context, Z3_sort, UInt]],
        'Z3_get_datatype_sort_num_constructors': [UInt, [Z3_context, Z3_sort]],
        'Z3_get_datatype_sort_constructor': [Z3_func_decl, [Z3_context, Z3_sort, UInt]],
        'Z3_get_datatype_sort_recognizer': [Z3_func_decl, [Z3_context, Z3_sort, UInt]],
        'Z3_get_datatype_sort_constructor_accessor': [Z3_func_decl, [Z3_context, Z3_sort, UInt, UInt]],
        'Z3_datatype_update_field': [Z3_ast, [Z3_context, Z3_func_decl, Z3_ast, Z3_ast]],
        'Z3_get_relation_arity': [UInt, [Z3_context, Z3_sort]],
        'Z3_get_relation_column': [Z3_sort, [Z3_context, Z3_sort, UInt]],
        'Z3_mk_atmost': [Z3_ast, [Z3_context, UInt, ref.refType(Z3_ast), UInt]],
        'Z3_mk_atleast': [Z3_ast, [Z3_context, UInt, ref.refType(Z3_ast), UInt]],
        'Z3_mk_pble': [Z3_ast, [Z3_context, UInt, ref.refType(Z3_ast), ref.refType(Int), Int]],
        'Z3_mk_pbge': [Z3_ast, [Z3_context, UInt, ref.refType(Z3_ast), ref.refType(Int), Int]],
        'Z3_mk_pbeq': [Z3_ast, [Z3_context, UInt, ref.refType(Z3_ast), ref.refType(Int), Int]],
        'Z3_func_decl_to_ast': [Z3_ast, [Z3_context, Z3_func_decl]],
        'Z3_is_eq_func_decl': [Bool, [Z3_context, Z3_func_decl, Z3_func_decl]],
        'Z3_get_func_decl_id': [UInt, [Z3_context, Z3_func_decl]],
        'Z3_get_decl_name': [Z3_symbol, [Z3_context, Z3_func_decl]],
        'Z3_get_decl_kind': [Z3_decl_kind, [Z3_context, Z3_func_decl]],
        'Z3_get_domain_size': [UInt, [Z3_context, Z3_func_decl]],
        'Z3_get_arity': [UInt, [Z3_context, Z3_func_decl]],
        'Z3_get_domain': [Z3_sort, [Z3_context, Z3_func_decl, UInt]],
        'Z3_get_range': [Z3_sort, [Z3_context, Z3_func_decl]],
        'Z3_get_decl_num_parameters': [UInt, [Z3_context, Z3_func_decl]],
        'Z3_get_decl_parameter_kind': [Z3_parameter_kind, [Z3_context, Z3_func_decl, UInt]],
        'Z3_get_decl_int_parameter': [Int, [Z3_context, Z3_func_decl, UInt]],
        'Z3_get_decl_double_parameter': [Float64, [Z3_context, Z3_func_decl, UInt]],
        'Z3_get_decl_symbol_parameter': [Z3_symbol, [Z3_context, Z3_func_decl, UInt]],
        'Z3_get_decl_sort_parameter': [Z3_sort, [Z3_context, Z3_func_decl, UInt]],
        'Z3_get_decl_ast_parameter': [Z3_ast, [Z3_context, Z3_func_decl, UInt]],
        'Z3_get_decl_func_decl_parameter': [Z3_func_decl, [Z3_context, Z3_func_decl, UInt]],
        'Z3_get_decl_rational_parameter': [Z3_string, [Z3_context, Z3_func_decl, UInt]],
        'Z3_app_to_ast': [Z3_ast, [Z3_context, Z3_app]],
        'Z3_get_app_decl': [Z3_func_decl, [Z3_context, Z3_app]],
        'Z3_get_app_num_args': [UInt, [Z3_context, Z3_app]],
        'Z3_get_app_arg': [Z3_ast, [Z3_context, Z3_app, UInt]],
        'Z3_is_eq_ast': [Bool, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_get_ast_id': [UInt, [Z3_context, Z3_ast]],
        'Z3_get_ast_hash': [UInt, [Z3_context, Z3_ast]],
        'Z3_get_sort': [Z3_sort, [Z3_context, Z3_ast]],
        'Z3_is_well_sorted': [Bool, [Z3_context, Z3_ast]],
        'Z3_get_bool_value': [Z3_lbool, [Z3_context, Z3_ast]],
        'Z3_get_ast_kind': [Z3_ast_kind, [Z3_context, Z3_ast]],
        'Z3_is_app': [Bool, [Z3_context, Z3_ast]],
        'Z3_is_numeral_ast': [Bool, [Z3_context, Z3_ast]],
        'Z3_is_algebraic_number': [Bool, [Z3_context, Z3_ast]],
        'Z3_to_app': [Z3_app, [Z3_context, Z3_ast]],
        'Z3_to_func_decl': [Z3_func_decl, [Z3_context, Z3_ast]],
        'Z3_get_numeral_string': [Z3_string, [Z3_context, Z3_ast]],
        'Z3_get_numeral_binary_string': [Z3_string, [Z3_context, Z3_ast]],
        'Z3_get_numeral_decimal_string': [Z3_string, [Z3_context, Z3_ast, UInt]],
        'Z3_get_numeral_double': [Float64, [Z3_context, Z3_ast]],
        'Z3_get_numerator': [Z3_ast, [Z3_context, Z3_ast]],
        'Z3_get_denominator': [Z3_ast, [Z3_context, Z3_ast]],
        'Z3_get_numeral_small': [Bool, [Z3_context, Z3_ast, ref.refType(Int64), ref.refType(Int64)]],
        'Z3_get_numeral_int': [Bool, [Z3_context, Z3_ast, ref.refType(Int)]],
        'Z3_get_numeral_uint': [Bool, [Z3_context, Z3_ast, ref.refType(UInt)]],
        'Z3_get_numeral_uint64': [Bool, [Z3_context, Z3_ast, ref.refType(UInt64)]],
        'Z3_get_numeral_int64': [Bool, [Z3_context, Z3_ast, ref.refType(Int64)]],
        'Z3_get_numeral_rational_int64': [Bool, [Z3_context, Z3_ast, ref.refType(Int64), ref.refType(Int64)]],
        'Z3_get_algebraic_number_lower': [Z3_ast, [Z3_context, Z3_ast, UInt]],
        'Z3_get_algebraic_number_upper': [Z3_ast, [Z3_context, Z3_ast, UInt]],
        'Z3_pattern_to_ast': [Z3_ast, [Z3_context, Z3_pattern]],
        'Z3_get_pattern_num_terms': [UInt, [Z3_context, Z3_pattern]],
        'Z3_get_pattern': [Z3_ast, [Z3_context, Z3_pattern, UInt]],
        'Z3_get_index_value': [UInt, [Z3_context, Z3_ast]],
        'Z3_is_quantifier_forall': [Bool, [Z3_context, Z3_ast]],
        'Z3_is_quantifier_exists': [Bool, [Z3_context, Z3_ast]],
        'Z3_is_lambda': [Bool, [Z3_context, Z3_ast]],
        'Z3_get_quantifier_weight': [UInt, [Z3_context, Z3_ast]],
        'Z3_get_quantifier_num_patterns': [UInt, [Z3_context, Z3_ast]],
        'Z3_get_quantifier_pattern_ast': [Z3_pattern, [Z3_context, Z3_ast, UInt]],
        'Z3_get_quantifier_num_no_patterns': [UInt, [Z3_context, Z3_ast]],
        'Z3_get_quantifier_no_pattern_ast': [Z3_ast, [Z3_context, Z3_ast, UInt]],
        'Z3_get_quantifier_num_bound': [UInt, [Z3_context, Z3_ast]],
        'Z3_get_quantifier_bound_name': [Z3_symbol, [Z3_context, Z3_ast, UInt]],
        'Z3_get_quantifier_bound_sort': [Z3_sort, [Z3_context, Z3_ast, UInt]],
        'Z3_get_quantifier_body': [Z3_ast, [Z3_context, Z3_ast]],
        'Z3_simplify': [Z3_ast, [Z3_context, Z3_ast]],
        'Z3_simplify_ex': [Z3_ast, [Z3_context, Z3_ast, Z3_params]],
        'Z3_simplify_get_help': [Z3_string, [Z3_context]],
        'Z3_simplify_get_param_descrs': [Z3_param_descrs, [Z3_context]],
        'Z3_update_term': [Z3_ast, [Z3_context, Z3_ast, UInt, ref.refType(Z3_ast)]],
        'Z3_substitute': [Z3_ast, [Z3_context, Z3_ast, UInt, ref.refType(Z3_ast), ref.refType(Z3_ast)]],
        'Z3_substitute_vars': [Z3_ast, [Z3_context, Z3_ast, UInt, ref.refType(Z3_ast)]],
        'Z3_substitute_funs': [Z3_ast, [Z3_context, Z3_ast, UInt, ref.refType(Z3_func_decl), ref.refType(Z3_ast)]],
        'Z3_translate': [Z3_ast, [Z3_context, Z3_ast, Z3_context]],
        'Z3_mk_model': [Z3_model, [Z3_context]],
        'Z3_model_inc_ref': [Void, [Z3_context, Z3_model]],
        'Z3_model_dec_ref': [Void, [Z3_context, Z3_model]],
        'Z3_model_eval': [Bool, [Z3_context, Z3_model, Z3_ast, Bool, ref.refType(Z3_ast)]],
        'Z3_model_get_const_interp': [Z3_ast, [Z3_context, Z3_model, Z3_func_decl]],
        'Z3_model_has_interp': [Bool, [Z3_context, Z3_model, Z3_func_decl]],
        'Z3_model_get_func_interp': [Z3_func_interp, [Z3_context, Z3_model, Z3_func_decl]],
        'Z3_model_get_num_consts': [UInt, [Z3_context, Z3_model]],
        'Z3_model_get_const_decl': [Z3_func_decl, [Z3_context, Z3_model, UInt]],
        'Z3_model_get_num_funcs': [UInt, [Z3_context, Z3_model]],
        'Z3_model_get_func_decl': [Z3_func_decl, [Z3_context, Z3_model, UInt]],
        'Z3_model_get_num_sorts': [UInt, [Z3_context, Z3_model]],
        'Z3_model_get_sort': [Z3_sort, [Z3_context, Z3_model, UInt]],
        'Z3_model_get_sort_universe': [Z3_ast_vector, [Z3_context, Z3_model, Z3_sort]],
        'Z3_model_translate': [Z3_model, [Z3_context, Z3_model, Z3_context]],
        'Z3_is_as_array': [Bool, [Z3_context, Z3_ast]],
        'Z3_get_as_array_func_decl': [Z3_func_decl, [Z3_context, Z3_ast]],
        'Z3_add_func_interp': [Z3_func_interp, [Z3_context, Z3_model, Z3_func_decl, Z3_ast]],
        'Z3_add_const_interp': [Void, [Z3_context, Z3_model, Z3_func_decl, Z3_ast]],
        'Z3_func_interp_inc_ref': [Void, [Z3_context, Z3_func_interp]],
        'Z3_func_interp_dec_ref': [Void, [Z3_context, Z3_func_interp]],
        'Z3_func_interp_get_num_entries': [UInt, [Z3_context, Z3_func_interp]],
        'Z3_func_interp_get_entry': [Z3_func_entry, [Z3_context, Z3_func_interp, UInt]],
        'Z3_func_interp_get_else': [Z3_ast, [Z3_context, Z3_func_interp]],
        'Z3_func_interp_set_else': [Void, [Z3_context, Z3_func_interp, Z3_ast]],
        'Z3_func_interp_get_arity': [UInt, [Z3_context, Z3_func_interp]],
        'Z3_func_interp_add_entry': [Void, [Z3_context, Z3_func_interp, Z3_ast_vector, Z3_ast]],
        'Z3_func_entry_inc_ref': [Void, [Z3_context, Z3_func_entry]],
        'Z3_func_entry_dec_ref': [Void, [Z3_context, Z3_func_entry]],
        'Z3_func_entry_get_value': [Z3_ast, [Z3_context, Z3_func_entry]],
        'Z3_func_entry_get_num_args': [UInt, [Z3_context, Z3_func_entry]],
        'Z3_func_entry_get_arg': [Z3_ast, [Z3_context, Z3_func_entry, UInt]],
        'Z3_open_log': [Bool, [Z3_string]],
        'Z3_append_log': [Void, [Z3_string]],
        'Z3_close_log': [Void, []],
        'Z3_toggle_warning_messages': [Void, [Bool]],
        'Z3_set_ast_print_mode': [Void, [Z3_context, Z3_ast_print_mode]],
        'Z3_ast_to_string': [Z3_string, [Z3_context, Z3_ast]],
        'Z3_pattern_to_string': [Z3_string, [Z3_context, Z3_pattern]],
        'Z3_sort_to_string': [Z3_string, [Z3_context, Z3_sort]],
        'Z3_func_decl_to_string': [Z3_string, [Z3_context, Z3_func_decl]],
        'Z3_model_to_string': [Z3_string, [Z3_context, Z3_model]],
        'Z3_benchmark_to_smtlib_string': [Z3_string, [Z3_context, Z3_string, Z3_string, Z3_string, Z3_string, UInt, ref.refType(Z3_ast), Z3_ast]],
        'Z3_parse_smtlib2_string': [Z3_ast_vector, [Z3_context, Z3_string, UInt, ref.refType(Z3_symbol), ref.refType(Z3_sort), UInt, ref.refType(Z3_symbol), ref.refType(Z3_func_decl)]],
        'Z3_parse_smtlib2_file': [Z3_ast_vector, [Z3_context, Z3_string, UInt, ref.refType(Z3_symbol), ref.refType(Z3_sort), UInt, ref.refType(Z3_symbol), ref.refType(Z3_func_decl)]],
        'Z3_eval_smtlib2_string': [Z3_string, [Z3_context, Z3_string]],
        'Z3_mk_parser_context': [Z3_parser_context, [Z3_context]],
        'Z3_parser_context_inc_ref': [Void, [Z3_context, Z3_parser_context]],
        'Z3_parser_context_dec_ref': [Void, [Z3_context, Z3_parser_context]],
        'Z3_parser_context_add_sort': [Void, [Z3_context, Z3_parser_context, Z3_sort]],
        'Z3_parser_context_add_decl': [Void, [Z3_context, Z3_parser_context, Z3_func_decl]],
        'Z3_parser_context_from_string': [Z3_ast_vector, [Z3_context, Z3_parser_context, Z3_string]],
        'Z3_get_error_code': [Z3_error_code, [Z3_context]],
        'Z3_set_error_handler': [Void, [Z3_context, Z3_error_handler]],
        'Z3_set_error': [Void, [Z3_context, Z3_error_code]],
        'Z3_get_error_msg': [Z3_string, [Z3_context, Z3_error_code]],
        'Z3_get_version': [Void, [ref.refType(UInt), ref.refType(UInt), ref.refType(UInt), ref.refType(UInt)]],
        'Z3_get_full_version': [Z3_string, []],
        'Z3_enable_trace': [Void, [Z3_string]],
        'Z3_disable_trace': [Void, [Z3_string]],
        'Z3_reset_memory': [Void, []],
        'Z3_finalize_memory': [Void, []],
        'Z3_mk_goal': [Z3_goal, [Z3_context, Bool, Bool, Bool]],
        'Z3_goal_inc_ref': [Void, [Z3_context, Z3_goal]],
        'Z3_goal_dec_ref': [Void, [Z3_context, Z3_goal]],
        'Z3_goal_precision': [Z3_goal_prec, [Z3_context, Z3_goal]],
        'Z3_goal_assert': [Void, [Z3_context, Z3_goal, Z3_ast]],
        'Z3_goal_inconsistent': [Bool, [Z3_context, Z3_goal]],
        'Z3_goal_depth': [UInt, [Z3_context, Z3_goal]],
        'Z3_goal_reset': [Void, [Z3_context, Z3_goal]],
        'Z3_goal_size': [UInt, [Z3_context, Z3_goal]],
        'Z3_goal_formula': [Z3_ast, [Z3_context, Z3_goal, UInt]],
        'Z3_goal_num_exprs': [UInt, [Z3_context, Z3_goal]],
        'Z3_goal_is_decided_sat': [Bool, [Z3_context, Z3_goal]],
        'Z3_goal_is_decided_unsat': [Bool, [Z3_context, Z3_goal]],
        'Z3_goal_translate': [Z3_goal, [Z3_context, Z3_goal, Z3_context]],
        'Z3_goal_convert_model': [Z3_model, [Z3_context, Z3_goal, Z3_model]],
        'Z3_goal_to_string': [Z3_string, [Z3_context, Z3_goal]],
        'Z3_goal_to_dimacs_string': [Z3_string, [Z3_context, Z3_goal, Bool]],
        'Z3_mk_tactic': [Z3_tactic, [Z3_context, Z3_string]],
        'Z3_tactic_inc_ref': [Void, [Z3_context, Z3_tactic]],
        'Z3_tactic_dec_ref': [Void, [Z3_context, Z3_tactic]],
        'Z3_mk_probe': [Z3_probe, [Z3_context, Z3_string]],
        'Z3_probe_inc_ref': [Void, [Z3_context, Z3_probe]],
        'Z3_probe_dec_ref': [Void, [Z3_context, Z3_probe]],
        'Z3_tactic_and_then': [Z3_tactic, [Z3_context, Z3_tactic, Z3_tactic]],
        'Z3_tactic_or_else': [Z3_tactic, [Z3_context, Z3_tactic, Z3_tactic]],
        'Z3_tactic_par_or': [Z3_tactic, [Z3_context, UInt, ref.refType(Z3_tactic)]],
        'Z3_tactic_par_and_then': [Z3_tactic, [Z3_context, Z3_tactic, Z3_tactic]],
        'Z3_tactic_try_for': [Z3_tactic, [Z3_context, Z3_tactic, UInt]],
        'Z3_tactic_when': [Z3_tactic, [Z3_context, Z3_probe, Z3_tactic]],
        'Z3_tactic_cond': [Z3_tactic, [Z3_context, Z3_probe, Z3_tactic, Z3_tactic]],
        'Z3_tactic_repeat': [Z3_tactic, [Z3_context, Z3_tactic, UInt]],
        'Z3_tactic_skip': [Z3_tactic, [Z3_context]],
        'Z3_tactic_fail': [Z3_tactic, [Z3_context]],
        'Z3_tactic_fail_if': [Z3_tactic, [Z3_context, Z3_probe]],
        'Z3_tactic_fail_if_not_decided': [Z3_tactic, [Z3_context]],
        'Z3_tactic_using_params': [Z3_tactic, [Z3_context, Z3_tactic, Z3_params]],
        'Z3_mk_simplifier': [Z3_simplifier, [Z3_context, Z3_string]],
        'Z3_simplifier_inc_ref': [Void, [Z3_context, Z3_simplifier]],
        'Z3_simplifier_dec_ref': [Void, [Z3_context, Z3_simplifier]],
        'Z3_solver_add_simplifier': [Z3_solver, [Z3_context, Z3_solver, Z3_simplifier]],
        'Z3_simplifier_and_then': [Z3_simplifier, [Z3_context, Z3_simplifier, Z3_simplifier]],
        'Z3_simplifier_using_params': [Z3_simplifier, [Z3_context, Z3_simplifier, Z3_params]],
        'Z3_get_num_simplifiers': [UInt, [Z3_context]],
        'Z3_get_simplifier_name': [Z3_string, [Z3_context, UInt]],
        'Z3_simplifier_get_help': [Z3_string, [Z3_context, Z3_simplifier]],
        'Z3_simplifier_get_param_descrs': [Z3_param_descrs, [Z3_context, Z3_simplifier]],
        'Z3_simplifier_get_descr': [Z3_string, [Z3_context, Z3_string]],
        'Z3_probe_const': [Z3_probe, [Z3_context, Float64]],
        'Z3_probe_lt': [Z3_probe, [Z3_context, Z3_probe, Z3_probe]],
        'Z3_probe_gt': [Z3_probe, [Z3_context, Z3_probe, Z3_probe]],
        'Z3_probe_le': [Z3_probe, [Z3_context, Z3_probe, Z3_probe]],
        'Z3_probe_ge': [Z3_probe, [Z3_context, Z3_probe, Z3_probe]],
        'Z3_probe_eq': [Z3_probe, [Z3_context, Z3_probe, Z3_probe]],
        'Z3_probe_and': [Z3_probe, [Z3_context, Z3_probe, Z3_probe]],
        'Z3_probe_or': [Z3_probe, [Z3_context, Z3_probe, Z3_probe]],
        'Z3_probe_not': [Z3_probe, [Z3_context, Z3_probe]],
        'Z3_get_num_tactics': [UInt, [Z3_context]],
        'Z3_get_tactic_name': [Z3_string, [Z3_context, UInt]],
        'Z3_get_num_probes': [UInt, [Z3_context]],
        'Z3_get_probe_name': [Z3_string, [Z3_context, UInt]],
        'Z3_tactic_get_help': [Z3_string, [Z3_context, Z3_tactic]],
        'Z3_tactic_get_param_descrs': [Z3_param_descrs, [Z3_context, Z3_tactic]],
        'Z3_tactic_get_descr': [Z3_string, [Z3_context, Z3_string]],
        'Z3_probe_get_descr': [Z3_string, [Z3_context, Z3_string]],
        'Z3_probe_apply': [Float64, [Z3_context, Z3_probe, Z3_goal]],
        'Z3_tactic_apply': [Z3_apply_result, [Z3_context, Z3_tactic, Z3_goal]],
        'Z3_tactic_apply_ex': [Z3_apply_result, [Z3_context, Z3_tactic, Z3_goal, Z3_params]],
        'Z3_apply_result_inc_ref': [Void, [Z3_context, Z3_apply_result]],
        'Z3_apply_result_dec_ref': [Void, [Z3_context, Z3_apply_result]],
        'Z3_apply_result_to_string': [Z3_string, [Z3_context, Z3_apply_result]],
        'Z3_apply_result_get_num_subgoals': [UInt, [Z3_context, Z3_apply_result]],
        'Z3_apply_result_get_subgoal': [Z3_goal, [Z3_context, Z3_apply_result, UInt]],
        'Z3_mk_solver': [Z3_solver, [Z3_context]],
        'Z3_mk_simple_solver': [Z3_solver, [Z3_context]],
        'Z3_mk_solver_for_logic': [Z3_solver, [Z3_context, Z3_symbol]],
        'Z3_mk_solver_from_tactic': [Z3_solver, [Z3_context, Z3_tactic]],
        'Z3_solver_translate': [Z3_solver, [Z3_context, Z3_solver, Z3_context]],
        'Z3_solver_import_model_converter': [Void, [Z3_context, Z3_solver, Z3_solver]],
        'Z3_solver_get_help': [Z3_string, [Z3_context, Z3_solver]],
        'Z3_solver_get_param_descrs': [Z3_param_descrs, [Z3_context, Z3_solver]],
        'Z3_solver_set_params': [Void, [Z3_context, Z3_solver, Z3_params]],
        'Z3_solver_inc_ref': [Void, [Z3_context, Z3_solver]],
        'Z3_solver_dec_ref': [Void, [Z3_context, Z3_solver]],
        'Z3_solver_interrupt': [Void, [Z3_context, Z3_solver]],
        'Z3_solver_push': [Void, [Z3_context, Z3_solver]],
        'Z3_solver_pop': [Void, [Z3_context, Z3_solver, UInt]],
        'Z3_solver_reset': [Void, [Z3_context, Z3_solver]],
        'Z3_solver_get_num_scopes': [UInt, [Z3_context, Z3_solver]],
        'Z3_solver_assert': [Void, [Z3_context, Z3_solver, Z3_ast]],
        'Z3_solver_assert_and_track': [Void, [Z3_context, Z3_solver, Z3_ast, Z3_ast]],
        'Z3_solver_from_file': [Void, [Z3_context, Z3_solver, Z3_string]],
        'Z3_solver_from_string': [Void, [Z3_context, Z3_solver, Z3_string]],
        'Z3_solver_get_assertions': [Z3_ast_vector, [Z3_context, Z3_solver]],
        'Z3_solver_get_units': [Z3_ast_vector, [Z3_context, Z3_solver]],
        'Z3_solver_get_trail': [Z3_ast_vector, [Z3_context, Z3_solver]],
        'Z3_solver_get_non_units': [Z3_ast_vector, [Z3_context, Z3_solver]],
        'Z3_solver_get_levels': [Void, [Z3_context, Z3_solver, Z3_ast_vector, UInt, ref.refType(UInt)]],
        'Z3_solver_congruence_root': [Z3_ast, [Z3_context, Z3_solver, Z3_ast]],
        'Z3_solver_congruence_next': [Z3_ast, [Z3_context, Z3_solver, Z3_ast]],
        'Z3_solver_register_on_clause': [Void, [Z3_context, Z3_solver, ref.refType(Void), Z3_on_clause_eh]],
        'Z3_solver_propagate_init': [Void, [Z3_context, Z3_solver, ref.refType(Void), Z3_push_eh, Z3_pop_eh, Z3_fresh_eh]],
        'Z3_solver_propagate_fixed': [Void, [Z3_context, Z3_solver, Z3_fixed_eh]],
        'Z3_solver_propagate_final': [Void, [Z3_context, Z3_solver, Z3_final_eh]],
        'Z3_solver_propagate_eq': [Void, [Z3_context, Z3_solver, Z3_eq_eh]],
        'Z3_solver_propagate_diseq': [Void, [Z3_context, Z3_solver, Z3_eq_eh]],
        'Z3_solver_propagate_created': [Void, [Z3_context, Z3_solver, Z3_created_eh]],
        'Z3_solver_propagate_decide': [Void, [Z3_context, Z3_solver, Z3_decide_eh]],
        'Z3_solver_next_split': [Void, [Z3_context, Z3_solver_callback, Z3_ast, UInt, Z3_lbool]],
        'Z3_solver_propagate_declare': [Z3_func_decl, [Z3_context, Z3_symbol, UInt, ref.refType(Z3_sort), Z3_sort]],
        'Z3_solver_propagate_register': [Void, [Z3_context, Z3_solver, Z3_ast]],
        'Z3_solver_propagate_register_cb': [Void, [Z3_context, Z3_solver_callback, Z3_ast]],
        'Z3_solver_propagate_consequence': [Void, [Z3_context, Z3_solver_callback, UInt, ref.refType(Z3_ast), UInt, ref.refType(Z3_ast), ref.refType(Z3_ast), Z3_ast]],
        'Z3_solver_check': [Z3_lbool, [Z3_context, Z3_solver]],
        'Z3_solver_check_assumptions': [Z3_lbool, [Z3_context, Z3_solver, UInt, ref.refType(Z3_ast)]],
        'Z3_get_implied_equalities': [Z3_lbool, [Z3_context, Z3_solver, UInt, ref.refType(Z3_ast), ref.refType(UInt)]],
        'Z3_solver_get_consequences': [Z3_lbool, [Z3_context, Z3_solver, Z3_ast_vector, Z3_ast_vector, Z3_ast_vector]],
        'Z3_solver_cube': [Z3_ast_vector, [Z3_context, Z3_solver, Z3_ast_vector, UInt]],
        'Z3_solver_get_model': [Z3_model, [Z3_context, Z3_solver]],
        'Z3_solver_get_proof': [Z3_ast, [Z3_context, Z3_solver]],
        'Z3_solver_get_unsat_core': [Z3_ast_vector, [Z3_context, Z3_solver]],
        'Z3_solver_get_reason_unknown': [Z3_string, [Z3_context, Z3_solver]],
        'Z3_solver_get_statistics': [Z3_stats, [Z3_context, Z3_solver]],
        'Z3_solver_to_string': [Z3_string, [Z3_context, Z3_solver]],
        'Z3_solver_to_dimacs_string': [Z3_string, [Z3_context, Z3_solver, Bool]],
        'Z3_stats_to_string': [Z3_string, [Z3_context, Z3_stats]],
        'Z3_stats_inc_ref': [Void, [Z3_context, Z3_stats]],
        'Z3_stats_dec_ref': [Void, [Z3_context, Z3_stats]],
        'Z3_stats_size': [UInt, [Z3_context, Z3_stats]],
        'Z3_stats_get_key': [Z3_string, [Z3_context, Z3_stats, UInt]],
        'Z3_stats_is_uint': [Bool, [Z3_context, Z3_stats, UInt]],
        'Z3_stats_is_double': [Bool, [Z3_context, Z3_stats, UInt]],
        'Z3_stats_get_uint_value': [UInt, [Z3_context, Z3_stats, UInt]],
        'Z3_stats_get_double_value': [Float64, [Z3_context, Z3_stats, UInt]],
        'Z3_get_estimated_alloc_size': [UInt64, []],
        'Z3_mk_ast_vector': [Z3_ast_vector, [Z3_context]],
        'Z3_ast_vector_inc_ref': [Void, [Z3_context, Z3_ast_vector]],
        'Z3_ast_vector_dec_ref': [Void, [Z3_context, Z3_ast_vector]],
        'Z3_ast_vector_size': [UInt, [Z3_context, Z3_ast_vector]],
        'Z3_ast_vector_get': [Z3_ast, [Z3_context, Z3_ast_vector, UInt]],
        'Z3_ast_vector_set': [Void, [Z3_context, Z3_ast_vector, UInt, Z3_ast]],
        'Z3_ast_vector_resize': [Void, [Z3_context, Z3_ast_vector, UInt]],
        'Z3_ast_vector_push': [Void, [Z3_context, Z3_ast_vector, Z3_ast]],
        'Z3_ast_vector_translate': [Z3_ast_vector, [Z3_context, Z3_ast_vector, Z3_context]],
        'Z3_ast_vector_to_string': [Z3_string, [Z3_context, Z3_ast_vector]],
        'Z3_mk_ast_map': [Z3_ast_map, [Z3_context]],
        'Z3_ast_map_inc_ref': [Void, [Z3_context, Z3_ast_map]],
        'Z3_ast_map_dec_ref': [Void, [Z3_context, Z3_ast_map]],
        'Z3_ast_map_contains': [Bool, [Z3_context, Z3_ast_map, Z3_ast]],
        'Z3_ast_map_find': [Z3_ast, [Z3_context, Z3_ast_map, Z3_ast]],
        'Z3_ast_map_insert': [Void, [Z3_context, Z3_ast_map, Z3_ast, Z3_ast]],
        'Z3_ast_map_erase': [Void, [Z3_context, Z3_ast_map, Z3_ast]],
        'Z3_ast_map_reset': [Void, [Z3_context, Z3_ast_map]],
        'Z3_ast_map_size': [UInt, [Z3_context, Z3_ast_map]],
        'Z3_ast_map_keys': [Z3_ast_vector, [Z3_context, Z3_ast_map]],
        'Z3_ast_map_to_string': [Z3_string, [Z3_context, Z3_ast_map]],
        'Z3_algebraic_is_value': [Bool, [Z3_context, Z3_ast]],
        'Z3_algebraic_is_pos': [Bool, [Z3_context, Z3_ast]],
        'Z3_algebraic_is_neg': [Bool, [Z3_context, Z3_ast]],
        'Z3_algebraic_is_zero': [Bool, [Z3_context, Z3_ast]],
        'Z3_algebraic_sign': [Int, [Z3_context, Z3_ast]],
        'Z3_algebraic_add': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_algebraic_sub': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_algebraic_mul': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_algebraic_div': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_algebraic_root': [Z3_ast, [Z3_context, Z3_ast, UInt]],
        'Z3_algebraic_power': [Z3_ast, [Z3_context, Z3_ast, UInt]],
        'Z3_algebraic_lt': [Bool, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_algebraic_gt': [Bool, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_algebraic_le': [Bool, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_algebraic_ge': [Bool, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_algebraic_eq': [Bool, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_algebraic_neq': [Bool, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_algebraic_roots': [Z3_ast_vector, [Z3_context, Z3_ast, UInt, ref.refType(Z3_ast)]],
        'Z3_algebraic_eval': [Int, [Z3_context, Z3_ast, UInt, ref.refType(Z3_ast)]],
        'Z3_algebraic_get_poly': [Z3_ast_vector, [Z3_context, Z3_ast]],
        'Z3_algebraic_get_i': [UInt, [Z3_context, Z3_ast]],
        'Z3_polynomial_subresultants': [Z3_ast_vector, [Z3_context, Z3_ast, Z3_ast, Z3_ast]],
        'Z3_rcf_del': [Void, [Z3_context, Z3_rcf_num]],
        'Z3_rcf_mk_rational': [Z3_rcf_num, [Z3_context, Z3_string]],
        'Z3_rcf_mk_small_int': [Z3_rcf_num, [Z3_context, Int]],
        'Z3_rcf_mk_pi': [Z3_rcf_num, [Z3_context]],
        'Z3_rcf_mk_e': [Z3_rcf_num, [Z3_context]],
        'Z3_rcf_mk_infinitesimal': [Z3_rcf_num, [Z3_context]],
        'Z3_rcf_mk_roots': [UInt, [Z3_context, UInt, ref.refType(Z3_rcf_num), ref.refType(Z3_rcf_num)]],
        'Z3_rcf_add': [Z3_rcf_num, [Z3_context, Z3_rcf_num, Z3_rcf_num]],
        'Z3_rcf_sub': [Z3_rcf_num, [Z3_context, Z3_rcf_num, Z3_rcf_num]],
        'Z3_rcf_mul': [Z3_rcf_num, [Z3_context, Z3_rcf_num, Z3_rcf_num]],
        'Z3_rcf_div': [Z3_rcf_num, [Z3_context, Z3_rcf_num, Z3_rcf_num]],
        'Z3_rcf_neg': [Z3_rcf_num, [Z3_context, Z3_rcf_num]],
        'Z3_rcf_inv': [Z3_rcf_num, [Z3_context, Z3_rcf_num]],
        'Z3_rcf_power': [Z3_rcf_num, [Z3_context, Z3_rcf_num, UInt]],
        'Z3_rcf_lt': [Bool, [Z3_context, Z3_rcf_num, Z3_rcf_num]],
        'Z3_rcf_gt': [Bool, [Z3_context, Z3_rcf_num, Z3_rcf_num]],
        'Z3_rcf_le': [Bool, [Z3_context, Z3_rcf_num, Z3_rcf_num]],
        'Z3_rcf_ge': [Bool, [Z3_context, Z3_rcf_num, Z3_rcf_num]],
        'Z3_rcf_eq': [Bool, [Z3_context, Z3_rcf_num, Z3_rcf_num]],
        'Z3_rcf_neq': [Bool, [Z3_context, Z3_rcf_num, Z3_rcf_num]],
        'Z3_rcf_num_to_string': [Z3_string, [Z3_context, Z3_rcf_num, Bool, Bool]],
        'Z3_rcf_num_to_decimal_string': [Z3_string, [Z3_context, Z3_rcf_num, UInt]],
        'Z3_rcf_get_numerator_denominator': [Void, [Z3_context, Z3_rcf_num, ref.refType(Z3_rcf_num), ref.refType(Z3_rcf_num)]],
        'Z3_mk_fixedpoint': [Z3_fixedpoint, [Z3_context]],
        'Z3_fixedpoint_inc_ref': [Void, [Z3_context, Z3_fixedpoint]],
        'Z3_fixedpoint_dec_ref': [Void, [Z3_context, Z3_fixedpoint]],
        'Z3_fixedpoint_add_rule': [Void, [Z3_context, Z3_fixedpoint, Z3_ast, Z3_symbol]],
        'Z3_fixedpoint_add_fact': [Void, [Z3_context, Z3_fixedpoint, Z3_func_decl, UInt, ref.refType(UInt)]],
        'Z3_fixedpoint_assert': [Void, [Z3_context, Z3_fixedpoint, Z3_ast]],
        'Z3_fixedpoint_query': [Z3_lbool, [Z3_context, Z3_fixedpoint, Z3_ast]],
        'Z3_fixedpoint_query_relations': [Z3_lbool, [Z3_context, Z3_fixedpoint, UInt, ref.refType(Z3_func_decl)]],
        'Z3_fixedpoint_get_answer': [Z3_ast, [Z3_context, Z3_fixedpoint]],
        'Z3_fixedpoint_get_reason_unknown': [Z3_string, [Z3_context, Z3_fixedpoint]],
        'Z3_fixedpoint_update_rule': [Void, [Z3_context, Z3_fixedpoint, Z3_ast, Z3_symbol]],
        'Z3_fixedpoint_get_num_levels': [UInt, [Z3_context, Z3_fixedpoint, Z3_func_decl]],
        'Z3_fixedpoint_get_cover_delta': [Z3_ast, [Z3_context, Z3_fixedpoint, Int, Z3_func_decl]],
        'Z3_fixedpoint_add_cover': [Void, [Z3_context, Z3_fixedpoint, Int, Z3_func_decl, Z3_ast]],
        'Z3_fixedpoint_get_statistics': [Z3_stats, [Z3_context, Z3_fixedpoint]],
        'Z3_fixedpoint_register_relation': [Void, [Z3_context, Z3_fixedpoint, Z3_func_decl]],
        'Z3_fixedpoint_set_predicate_representation': [Void, [Z3_context, Z3_fixedpoint, Z3_func_decl, UInt, ref.refType(Z3_symbol)]],
        'Z3_fixedpoint_get_rules': [Z3_ast_vector, [Z3_context, Z3_fixedpoint]],
        'Z3_fixedpoint_get_assertions': [Z3_ast_vector, [Z3_context, Z3_fixedpoint]],
        'Z3_fixedpoint_set_params': [Void, [Z3_context, Z3_fixedpoint, Z3_params]],
        'Z3_fixedpoint_get_help': [Z3_string, [Z3_context, Z3_fixedpoint]],
        'Z3_fixedpoint_get_param_descrs': [Z3_param_descrs, [Z3_context, Z3_fixedpoint]],
        'Z3_fixedpoint_to_string': [Z3_string, [Z3_context, Z3_fixedpoint, UInt, ref.refType(Z3_ast)]],
        'Z3_fixedpoint_from_string': [Z3_ast_vector, [Z3_context, Z3_fixedpoint, Z3_string]],
        'Z3_fixedpoint_from_file': [Z3_ast_vector, [Z3_context, Z3_fixedpoint, Z3_string]],
        'Z3_fixedpoint_init': [Void, [Z3_context, Z3_fixedpoint, ref.refType(Void)]],
        'Z3_fixedpoint_set_reduce_assign_callback': [Void, [Z3_context, Z3_fixedpoint, Z3_fixedpoint_reduce_assign_callback_fptr]],
        'Z3_fixedpoint_set_reduce_app_callback': [Void, [Z3_context, Z3_fixedpoint, Z3_fixedpoint_reduce_app_callback_fptr]],
        'Z3_fixedpoint_add_callback': [Void, [Z3_context, Z3_fixedpoint, ref.refType(Void), Z3_fixedpoint_new_lemma_eh, Z3_fixedpoint_predecessor_eh, Z3_fixedpoint_unfold_eh]],
        'Z3_fixedpoint_add_constraint': [Void, [Z3_context, Z3_fixedpoint, Z3_ast, UInt]],
        'Z3_mk_optimize': [Z3_optimize, [Z3_context]],
        'Z3_optimize_inc_ref': [Void, [Z3_context, Z3_optimize]],
        'Z3_optimize_dec_ref': [Void, [Z3_context, Z3_optimize]],
        'Z3_optimize_assert': [Void, [Z3_context, Z3_optimize, Z3_ast]],
        'Z3_optimize_assert_and_track': [Void, [Z3_context, Z3_optimize, Z3_ast, Z3_ast]],
        'Z3_optimize_assert_soft': [UInt, [Z3_context, Z3_optimize, Z3_ast, Z3_string, Z3_symbol]],
        'Z3_optimize_maximize': [UInt, [Z3_context, Z3_optimize, Z3_ast]],
        'Z3_optimize_minimize': [UInt, [Z3_context, Z3_optimize, Z3_ast]],
        'Z3_optimize_push': [Void, [Z3_context, Z3_optimize]],
        'Z3_optimize_pop': [Void, [Z3_context, Z3_optimize]],
        'Z3_optimize_check': [Z3_lbool, [Z3_context, Z3_optimize, UInt, ref.refType(Z3_ast)]],
        'Z3_optimize_get_reason_unknown': [Z3_string, [Z3_context, Z3_optimize]],
        'Z3_optimize_get_model': [Z3_model, [Z3_context, Z3_optimize]],
        'Z3_optimize_get_unsat_core': [Z3_ast_vector, [Z3_context, Z3_optimize]],
        'Z3_optimize_set_params': [Void, [Z3_context, Z3_optimize, Z3_params]],
        'Z3_optimize_get_param_descrs': [Z3_param_descrs, [Z3_context, Z3_optimize]],
        'Z3_optimize_get_lower': [Z3_ast, [Z3_context, Z3_optimize, UInt]],
        'Z3_optimize_get_upper': [Z3_ast, [Z3_context, Z3_optimize, UInt]],
        'Z3_optimize_get_lower_as_vector': [Z3_ast_vector, [Z3_context, Z3_optimize, UInt]],
        'Z3_optimize_get_upper_as_vector': [Z3_ast_vector, [Z3_context, Z3_optimize, UInt]],
        'Z3_optimize_to_string': [Z3_string, [Z3_context, Z3_optimize]],
        'Z3_optimize_from_string': [Void, [Z3_context, Z3_optimize, Z3_string]],
        'Z3_optimize_from_file': [Void, [Z3_context, Z3_optimize, Z3_string]],
        'Z3_optimize_get_help': [Z3_string, [Z3_context, Z3_optimize]],
        'Z3_optimize_get_statistics': [Z3_stats, [Z3_context, Z3_optimize]],
        'Z3_optimize_get_assertions': [Z3_ast_vector, [Z3_context, Z3_optimize]],
        'Z3_optimize_get_objectives': [Z3_ast_vector, [Z3_context, Z3_optimize]],
        'Z3_optimize_register_model_eh': [Void, [Z3_context, Z3_optimize, Z3_model, ref.refType(Void), Z3_model_eh]],
        'Z3_mk_fpa_rounding_mode_sort': [Z3_sort, [Z3_context]],
        'Z3_mk_fpa_round_nearest_ties_to_even': [Z3_ast, [Z3_context]],
        'Z3_mk_fpa_rne': [Z3_ast, [Z3_context]],
        'Z3_mk_fpa_round_nearest_ties_to_away': [Z3_ast, [Z3_context]],
        'Z3_mk_fpa_rna': [Z3_ast, [Z3_context]],
        'Z3_mk_fpa_round_toward_positive': [Z3_ast, [Z3_context]],
        'Z3_mk_fpa_rtp': [Z3_ast, [Z3_context]],
        'Z3_mk_fpa_round_toward_negative': [Z3_ast, [Z3_context]],
        'Z3_mk_fpa_rtn': [Z3_ast, [Z3_context]],
        'Z3_mk_fpa_round_toward_zero': [Z3_ast, [Z3_context]],
        'Z3_mk_fpa_rtz': [Z3_ast, [Z3_context]],
        'Z3_mk_fpa_sort': [Z3_sort, [Z3_context, UInt, UInt]],
        'Z3_mk_fpa_sort_half': [Z3_sort, [Z3_context]],
        'Z3_mk_fpa_sort_16': [Z3_sort, [Z3_context]],
        'Z3_mk_fpa_sort_single': [Z3_sort, [Z3_context]],
        'Z3_mk_fpa_sort_32': [Z3_sort, [Z3_context]],
        'Z3_mk_fpa_sort_double': [Z3_sort, [Z3_context]],
        'Z3_mk_fpa_sort_64': [Z3_sort, [Z3_context]],
        'Z3_mk_fpa_sort_quadruple': [Z3_sort, [Z3_context]],
        'Z3_mk_fpa_sort_128': [Z3_sort, [Z3_context]],
        'Z3_mk_fpa_nan': [Z3_ast, [Z3_context, Z3_sort]],
        'Z3_mk_fpa_inf': [Z3_ast, [Z3_context, Z3_sort, Bool]],
        'Z3_mk_fpa_zero': [Z3_ast, [Z3_context, Z3_sort, Bool]],
        'Z3_mk_fpa_fp': [Z3_ast, [Z3_context, Z3_ast, Z3_ast, Z3_ast]],
        'Z3_mk_fpa_numeral_float': [Z3_ast, [Z3_context, Float32, Z3_sort]],
        'Z3_mk_fpa_numeral_double': [Z3_ast, [Z3_context, Float64, Z3_sort]],
        'Z3_mk_fpa_numeral_int': [Z3_ast, [Z3_context, Int, Z3_sort]],
        'Z3_mk_fpa_numeral_int_uint': [Z3_ast, [Z3_context, Bool, Int, UInt, Z3_sort]],
        'Z3_mk_fpa_numeral_int64_uint64': [Z3_ast, [Z3_context, Bool, Int64, UInt64, Z3_sort]],
        'Z3_mk_fpa_abs': [Z3_ast, [Z3_context, Z3_ast]],
        'Z3_mk_fpa_neg': [Z3_ast, [Z3_context, Z3_ast]],
        'Z3_mk_fpa_add': [Z3_ast, [Z3_context, Z3_ast, Z3_ast, Z3_ast]],
        'Z3_mk_fpa_sub': [Z3_ast, [Z3_context, Z3_ast, Z3_ast, Z3_ast]],
        'Z3_mk_fpa_mul': [Z3_ast, [Z3_context, Z3_ast, Z3_ast, Z3_ast]],
        'Z3_mk_fpa_div': [Z3_ast, [Z3_context, Z3_ast, Z3_ast, Z3_ast]],
        'Z3_mk_fpa_fma': [Z3_ast, [Z3_context, Z3_ast, Z3_ast, Z3_ast, Z3_ast]],
        'Z3_mk_fpa_sqrt': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_fpa_rem': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_fpa_round_to_integral': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_fpa_min': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_fpa_max': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_fpa_leq': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_fpa_lt': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_fpa_geq': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_fpa_gt': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_fpa_eq': [Z3_ast, [Z3_context, Z3_ast, Z3_ast]],
        'Z3_mk_fpa_is_normal': [Z3_ast, [Z3_context, Z3_ast]],
        'Z3_mk_fpa_is_subnormal': [Z3_ast, [Z3_context, Z3_ast]],
        'Z3_mk_fpa_is_zero': [Z3_ast, [Z3_context, Z3_ast]],
        'Z3_mk_fpa_is_infinite': [Z3_ast, [Z3_context, Z3_ast]],
        'Z3_mk_fpa_is_nan': [Z3_ast, [Z3_context, Z3_ast]],
        'Z3_mk_fpa_is_negative': [Z3_ast, [Z3_context, Z3_ast]],
        'Z3_mk_fpa_is_positive': [Z3_ast, [Z3_context, Z3_ast]],
        'Z3_mk_fpa_to_fp_bv': [Z3_ast, [Z3_context, Z3_ast, Z3_sort]],
        'Z3_mk_fpa_to_fp_float': [Z3_ast, [Z3_context, Z3_ast, Z3_ast, Z3_sort]],
        'Z3_mk_fpa_to_fp_real': [Z3_ast, [Z3_context, Z3_ast, Z3_ast, Z3_sort]],
        'Z3_mk_fpa_to_fp_signed': [Z3_ast, [Z3_context, Z3_ast, Z3_ast, Z3_sort]],
        'Z3_mk_fpa_to_fp_unsigned': [Z3_ast, [Z3_context, Z3_ast, Z3_ast, Z3_sort]],
        'Z3_mk_fpa_to_ubv': [Z3_ast, [Z3_context, Z3_ast, Z3_ast, UInt]],
        'Z3_mk_fpa_to_sbv': [Z3_ast, [Z3_context, Z3_ast, Z3_ast, UInt]],
        'Z3_mk_fpa_to_real': [Z3_ast, [Z3_context, Z3_ast]],
        'Z3_fpa_get_ebits': [UInt, [Z3_context, Z3_sort]],
        'Z3_fpa_get_sbits': [UInt, [Z3_context, Z3_sort]],
        'Z3_fpa_is_numeral_nan': [Bool, [Z3_context, Z3_ast]],
        'Z3_fpa_is_numeral_inf': [Bool, [Z3_context, Z3_ast]],
        'Z3_fpa_is_numeral_zero': [Bool, [Z3_context, Z3_ast]],
        'Z3_fpa_is_numeral_normal': [Bool, [Z3_context, Z3_ast]],
        'Z3_fpa_is_numeral_subnormal': [Bool, [Z3_context, Z3_ast]],
        'Z3_fpa_is_numeral_positive': [Bool, [Z3_context, Z3_ast]],
        'Z3_fpa_is_numeral_negative': [Bool, [Z3_context, Z3_ast]],
        'Z3_fpa_get_numeral_sign_bv': [Z3_ast, [Z3_context, Z3_ast]],
        'Z3_fpa_get_numeral_significand_bv': [Z3_ast, [Z3_context, Z3_ast]],
        'Z3_fpa_get_numeral_sign': [Bool, [Z3_context, Z3_ast, ref.refType(Int)]],
        'Z3_fpa_get_numeral_significand_string': [Z3_string, [Z3_context, Z3_ast]],
        'Z3_fpa_get_numeral_significand_uint64': [Bool, [Z3_context, Z3_ast, ref.refType(UInt64)]],
        'Z3_fpa_get_numeral_exponent_string': [Z3_string, [Z3_context, Z3_ast, Bool]],
        'Z3_fpa_get_numeral_exponent_int64': [Bool, [Z3_context, Z3_ast, ref.refType(Int64), Bool]],
        'Z3_fpa_get_numeral_exponent_bv': [Z3_ast, [Z3_context, Z3_ast, Bool]],
        'Z3_mk_fpa_to_ieee_bv': [Z3_ast, [Z3_context, Z3_ast]],
        'Z3_mk_fpa_to_fp_int_real': [Z3_ast, [Z3_context, Z3_ast, Z3_ast, Z3_ast, Z3_sort]],
        'Z3_fixedpoint_query_from_lvl': [Z3_lbool, [Z3_context, Z3_fixedpoint, Z3_ast, UInt]],
        'Z3_fixedpoint_get_ground_sat_answer': [Z3_ast, [Z3_context, Z3_fixedpoint]],
        'Z3_fixedpoint_get_rules_along_trace': [Z3_ast_vector, [Z3_context, Z3_fixedpoint]],
        'Z3_fixedpoint_get_rule_names_along_trace': [Z3_symbol, [Z3_context, Z3_fixedpoint]],
        'Z3_fixedpoint_add_invariant': [Void, [Z3_context, Z3_fixedpoint, Z3_func_decl, Z3_ast]],
        'Z3_fixedpoint_get_reachable': [Z3_ast, [Z3_context, Z3_fixedpoint, Z3_func_decl]],
        'Z3_qe_model_project': [Z3_ast, [Z3_context, Z3_model, UInt, ref.refType(Z3_app), Z3_ast]],
        'Z3_qe_model_project_skolem': [Z3_ast, [Z3_context, Z3_model, UInt, ref.refType(Z3_app), Z3_ast, Z3_ast_map]],
        'Z3_model_extrapolate': [Z3_ast, [Z3_context, Z3_model, Z3_ast]],
        'Z3_qe_lite': [Z3_ast, [Z3_context, Z3_ast_vector, Z3_ast]],
    }
);
